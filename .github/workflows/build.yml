name: Test building the project in different environments

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os:
          - { image: "debian:bullseye", dockerfile: "Dockerfile_DEBIAN", name_safe: "debian-bullseye" }
          - { image: "debian:bookworm", dockerfile: "Dockerfile_DEBIAN", name_safe: "debian-bookworm" }
          - { image: "ubuntu:22.04", dockerfile: "Dockerfile_DEBIAN", name_safe: "ubuntu-22.04" }
          - { image: "ubuntu:24.04", dockerfile: "Dockerfile_DEBIAN", name_safe: "ubuntu-24.04" }
      fail-fast: false

    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build the Docker image
        run: |
          docker build \
            --build-arg BASE_OS=${{ matrix.os.image }} \
            -f docker/${{ matrix.os.dockerfile }} \
            -t test_${{ matrix.os.name_safe }} .

      - name: FBDEV Test building the project
        run: |
          sed -i "s/^#define LV_USE_LINUX_FBDEV.*$/#define LV_USE_LINUX_FBDEV 1/g" lv_conf.h && \
          sed -i "s/^#define LV_USE_LINUX_DRM.*$/#define LV_USE_LINUX_DRM 0/g" lv_conf.h && \
          sed -i "s/^#define LV_USE_SDL.*$/#define LV_USE_SDL 0/g" lv_conf.h && \
          docker run --rm -v "$(pwd)":/workdir -t test_${{ matrix.os.name_safe }} \
          /bin/bash -ec "cmake -DCMAKE_C_FLAGS=-Werror -B build_fbdev -S . && make -j -C build_fbdev && ldd build_fbdev/bin/lvglsim"

      - name: Upload FBDEV build directory
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os.name_safe }}-fbdev
          path: build_fbdev/

      - name: DRM Test building the project
        run: |
          sed -i "s/^#define LV_USE_LINUX_FBDEV.*$/#define LV_USE_LINUX_FBDEV 0/g" lv_conf.h && \
          sed -i "s/^#define LV_USE_LINUX_DRM.*$/#define LV_USE_LINUX_DRM 1/g" lv_conf.h && \
          sed -i "s/^#define LV_USE_SDL.*$/#define LV_USE_SDL 0/g" lv_conf.h && \
          docker run --rm -v "$(pwd)":/workdir -t test_${{ matrix.os.name_safe }} \
          /bin/bash -ec "cmake -DCMAKE_C_FLAGS=-Werror -B build_drm -S . && make -j -C build_drm && ldd build_drm/bin/lvglsim"

      - name: Upload DRM build directory
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os.name_safe }}-drm
          path: build_drm/

      - name: SDL Test building the project
        run: |
          sed -i "s/^#define LV_USE_LINUX_FBDEV.*$/#define LV_USE_LINUX_FBDEV 0/g" lv_conf.h && \
          sed -i "s/^#define LV_USE_LINUX_DRM.*$/#define LV_USE_LINUX_DRM 0/g" lv_conf.h && \
          sed -i "s/^#define LV_USE_SDL.*$/#define LV_USE_SDL 1/g" lv_conf.h && \
          docker run --rm -v "$(pwd)":/workdir -t test_${{ matrix.os.name_safe }} \
          /bin/bash -ec "cmake -DCMAKE_C_FLAGS=-Werror -B build_sdl -S . && make -j -C build_sdl && ldd build_sdl/bin/lvglsim"

      - name: Upload SDL build directory
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os.name_safe }}-sdl
          path: build_sdl/


# name: Test building the project in different environments

# on: [push, pull_request]

# jobs:
#   build:
#     strategy:
#       matrix:
#         os:
#           - { image: "debian:bullseye", dockerfile: "Dockerfile_DEBIAN", name_safe: "debian-bullseye" }
#           - { image: "debian:bookworm", dockerfile: "Dockerfile_DEBIAN", name_safe: "debian-bookworm" }
#           - { image: "ubuntu:22.04", dockerfile: "Dockerfile_DEBIAN", name_safe: "ubuntu-22.04" }
#           - { image: "ubuntu:24.04", dockerfile: "Dockerfile_DEBIAN", name_safe: "ubuntu-24.04" }
#       fail-fast: false

#     runs-on: ubuntu-24.04

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#         with:
#           submodules: recursive

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Build the Docker image
#         run: |
#           docker build \
#             --build-arg BASE_OS=${{ matrix.os.image }} \
#             -f docker/${{ matrix.os.dockerfile }} \
#             -t test_${{ matrix.os.name_safe }} .

#       - name: FBDEV Test building the project
#         run: |
#           sed -i "s/^#define LV_USE_LINUX_FBDEV.*$/#define LV_USE_LINUX_FBDEV 1/g" lv_conf.h && \
#           sed -i "s/^#define LV_USE_LINUX_DRM.*$/#define LV_USE_LINUX_DRM 0/g" lv_conf.h && \
#           sed -i "s/^#define LV_USE_SDL.*$/#define LV_USE_SDL 0/g" lv_conf.h && \
#           docker run --rm -v "$(pwd)":/workdir -t test_${{ matrix.os.name_safe }} \
#           /bin/bash -ec "cmake -DCMAKE_C_FLAGS=-Werror -B build -S . && make -j -C build"
      
#       - name: Upload FBDEV binary
#         uses: actions/upload-artifact@v4
#         with:
#           name: lvglsim-${{ matrix.os.name_safe }}-fbdev
#           path: build/bin/lvglsim

#       - name: DRM Test building the project
#         run: |
#           sudo rm -Rf build/ bin/ && \
#           sed -i "s/^#define LV_USE_LINUX_FBDEV.*$/#define LV_USE_LINUX_FBDEV 0/g" lv_conf.h && \
#           sed -i "s/^#define LV_USE_LINUX_DRM.*$/#define LV_USE_LINUX_DRM 1/g" lv_conf.h && \
#           sed -i "s/^#define LV_USE_SDL.*$/#define LV_USE_SDL 0/g" lv_conf.h && \
#           docker run --rm -v "$(pwd)":/workdir -t test_${{ matrix.os.name_safe }} \
#           /bin/bash -ec "cmake -DCMAKE_C_FLAGS=-Werror -B build -S . && make -j -C build"

#       - name: Upload DRM binary
#         uses: actions/upload-artifact@v4
#         with:
#           name: lvglsim-${{ matrix.os.name_safe }}-drm
#           path: build/bin/lvglsim

#       - name: SDL Test building the project
#         run: |
#           sudo rm -Rf build/ bin/ && \
#           sed -i "s/^#define LV_USE_LINUX_FBDEV.*$/#define LV_USE_LINUX_FBDEV 0/g" lv_conf.h && \
#           sed -i "s/^#define LV_USE_LINUX_DRM.*$/#define LV_USE_LINUX_DRM 0/g" lv_conf.h && \
#           sed -i "s/^#define LV_USE_SDL.*$/#define LV_USE_SDL 1/g" lv_conf.h && \
#           docker run --rm -v "$(pwd)":/workdir -t test_${{ matrix.os.name_safe }} \
#           /bin/bash -ec "cmake -DCMAKE_C_FLAGS=-Werror -B build -S . && make -j -C build"

#       - name: Upload SDL binary
#         uses: actions/upload-artifact@v4
#         with:
#           name: lvglsim-${{ matrix.os.name_safe }}-sdl
#           path: build/bin/lvglsim
